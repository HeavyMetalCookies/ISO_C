    
    //:Function Call:

    //| If the function succeeds, it returns a value         |//
    //| greater than 32. If the function fails, it           |//
    //| returns an error value that indicates the cause      |//
    //| of the failure. The return value is cast as an       |//
    //| HINSTANCE for backward compatibility with 16-bit     |//
    //| Windows applications. It is not a true HINSTANCE,    |//
    //| however. It can be cast only to an int and compared  |//
    //| to either 32 or the following error codes below.     |//
    //[ SOURCE: MSDN article on ShellExecuteA                ]//
    struct ARG_ShellExecuteA  A = { 0 };
    int res = pfn_ShellExecuteA(
        ( A.hwnd        = NULL         ) //:No window
    ,   ( A.lpOperation = "open"       ) //:open/execute
    ,   ( A.lpFile      = "S.exe"      ) //:Program To Run
    ,   ( A.lpParameters= lpParameters ) //:Argument List
    ,   ( A.lpDirectory = NULL         ) //:Use Program's Dir
    ,   ( A.nShowCmd    = 0            ) //:Not windowed program
    );;

    if( res <= 32 ){
        printf("[ShellExecuteA:FAIL]");
        fflush(stdout);
        exit(666);
    };;